<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

  <security:global-method-security
    pre-post-annotations="enabled" />

  <!-- Use spring servlet for all requests, including static resources -->
  <mvc:default-servlet-handler />

  <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
    up static resources in the ${webappRoot}/resources directory -->

  <context:component-scan
    base-package="kr.or.bit" />
  <mvc:resources mapping="/resources/**"
    location="/resources/" />

  <tx:annotation-driven
    transaction-manager="transactionManager" />

  <mvc:interceptors>
    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <mvc:exclude-mapping path="/css/**" />
      <mvc:exclude-mapping path="/js/**" />
      <mvc:exclude-mapping path="/socket/**" />
      <mvc:exclude-mapping path="/login*" />
      <bean id="commonPageInterceptor"
        class="kr.or.bit.interceptor.CommonPageInterceptor"></bean>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <mvc:exclude-mapping path="/css/**" />
      <mvc:exclude-mapping path="/js/**" />
      <mvc:exclude-mapping path="/mypage" />
      <mvc:exclude-mapping path="/socket/**" />
      <mvc:exclude-mapping path="/login*" />
      <mvc:exclude-mapping path="/resources/**" />
      <bean id="passwordChangedInterceptor"
        class="kr.or.bit.interceptor.PasswordChangedInterceptor"></bean>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/myclass/**" />
      <bean id="myClassInterceptor"
        class="kr.or.bit.interceptor.MyClassInterceptor"></bean>
    </mvc:interceptor>
  </mvc:interceptors>

  <!-- Enables the Spring MVC @Controller programming model -->
  <mvc:annotation-driven>
    <mvc:message-converters>
      <!-- String으로 Ajax 전송 시 UTF-8로 인코딩 -->
      <bean
        class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
          <list>
            <value>text/html;charset=UTF-8</value>
          </list>
        </property>
      </bean>
    </mvc:message-converters>
  </mvc:annotation-driven>
  <!-- Thymeleaf View Resolver - implementation of Spring's ViewResolver 
    interface -->
  <bean id="viewResolver"
    class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
    <property name="templateEngine" ref="templateEngine" />
    <property name="characterEncoding" value="UTF-8" />
  </bean>

  <!-- Thymeleaf Template Resolver -->
  <bean id="templateResolver"
    class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
    <property name="prefix" value="/WEB-INF/views/" />
    <property name="suffix" value=".html" />
    <property name="templateMode" value="HTML" />
    <property name="characterEncoding" value="UTF-8" />
    <property name="cacheable" value="false" />
  </bean>

  <bean id="emailTemplateResolver"
    class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
    <property name="prefix" value="/WEB-INF/mail/" />
    <property name="suffix" value=".html" />
    <property name="templateMode" value="HTML" />
    <property name="characterEncoding" value="UTF-8" />
    <property name="cacheable" value="false" />
  </bean>

  <!-- Thymeleaf Template Engine (Spring4-specific version) -->
  <bean id="templateEngine"
    class="org.thymeleaf.spring4.SpringTemplateEngine">
    <property name="templateResolver">
      <ref bean="templateResolver" />
    </property>
    <property name="additionalDialects">
      <set>
        <!-- Note the package would change to 'springsecurity[3|4]' if you 
          are using that version -->
        <bean
          class="org.thymeleaf.extras.springsecurity4.dialect.SpringSecurityDialect" />
        <bean
          class="org.thymeleaf.extras.java8time.dialect.Java8TimeDialect" />
      </set>
    </property>
  </bean>
  
  <bean id="emailTemplateEngine"
    class="org.thymeleaf.spring4.SpringTemplateEngine">
    <property name="templateResolver" ref="emailTemplateResolver" />
  </bean>

  <bean name="jsonView"
    class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />


  <!-- 멀티파트 리졸버 -->
  <bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- 최대업로드 가능한 바이트크기 -->
    <property name="maxUploadSize" value="52428800" />
    <!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
    <!-- property name="maxInMemorySize" value="52428800" / -->
    <!-- defaultEncoding -->
    <property name="defaultEncoding" value="utf-8" />
  </bean>

  <bean id="mailSender"
    class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="smtp.gmail.com" />
    <property name="port" value="587" />
    <property name="username" value="bitcampfinal2team@gmail.com" />
    <property name="password" value="q!w2e3r4" />
    <property name="javaMailProperties">
      <props>
        <prop key="mail.smtp.auth">true</prop>
        <prop key="mail.smtp.starttls.enable">true</prop>
      </props>
    </property>
  </bean>
</beans>