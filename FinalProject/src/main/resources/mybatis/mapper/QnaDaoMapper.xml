<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- void insertQna(int articleid); void updateQnaByAnswered(String qna, 
	int id); void updateQnaByTeacherAnswered(String qnat, int id); void selectQnaByArticleId(int 
	id); -->
<!-- 작업자: 권순조 -->
<!-- 추가작업: StackDaoMapper 참고중... 작업자:권예지 -->
<mapper namespace="kr.or.bit.dao.QnaDao">
	<insert id="insertQna">
		insert into QNA(article_id)
		values (#{article_id})
	</insert>
	<update id="updateQnaByAnswered">
		{call CHANGE("QNA", #{id})}
	</update>
	<update id="updateQnaByTeacherAnswered">
		{call CHANGE("QNA", #{id})}
	</update>
	<select id="selectQnaByArticleId"
		resultType="kr.or.bit.model.Qna">
		SELECT id, article_id, adopted_answer
		FROM qna
		WHERE article_id=#{article_id}
	</select>
	<update id="chooseAnswer" parameterType="kr.or.bit.model.Qna">
		UPDATE qna
		SET adopted_answer=#{comment_id}
		WHERE article_id=#{article_id}
	</update>

	
	<select id="countAllQnaArticle" resultType="Integer">
		SELECT count(*)
		FROM article
		WHERE BOARD_ID=6 AND ENABLE=1
	</select>
	<select id="countQnaArticleByTitleOrContent" resultType="Integer">
		SELECT COUNT(*)
  		FROM article
  		WHERE board_id = 6 AND enable =  1 AND title LIKE '%${boardSearch}%' OR content LIKE '%${boardSearch}%'
	</select>
	<select id="countQnaArticleByTitle" resultType="Integer">
		SELECT COUNT(*)
  		FROM article
  		WHERE board_id = 6 AND enable =  1 AND title LIKE '%${boardSearch}%'
	</select>
	<select id="countQnaArticleByWriter" resultType="Integer">
		SELECT COUNT(*)
  		FROM article a JOIN member m ON a.username = m.username
  		WHERE board_id = 6 AND enable =  1 AND m.name LIKE '%${boardSearch}%'
	</select>	
	<select id="selectQnaArticleByTitleOrContent" resultType="kr.or.bit.model.Article">
		SELECT a.ID, a.TITLE, a.CONTENT, a.TIME, a.VIEW_COUNT, a.UPDATED_TIME, a.USERNAME, b.board_name, b.course_id, b.boardtype
		FROM ARTICLE a JOIN BOARD b ON a.board_id = b.id 
		WHERE BOARD_ID=6 AND ENABLE = 1 AND a.title LIKE '%${boardSearch}%' OR a.content LIKE '%${boardSearch}%'
		ORDER BY a.ID DESC
		LIMIT #{pager.start}, #{pager.articlesOnPage}
	</select>
	<select id="selectQnaArticleByTitle" resultType="kr.or.bit.model.Article">
		SELECT a.ID, a.TITLE, a.CONTENT, a.TIME, a.VIEW_COUNT, a.UPDATED_TIME, a.USERNAME, b.board_name, b.course_id, b.boardtype
		FROM ARTICLE a JOIN BOARD b ON a.board_id = b.id 
		WHERE BOARD_ID=6 AND ENABLE = 1 AND a.title LIKE '%${boardSearch}%'
		ORDER BY a.ID DESC
		LIMIT #{pager.start}, #{pager.articlesOnPage}
	</select>
	<select id="selectQnaArticleByWriter" resultType="kr.or.bit.model.Article">
		SELECT a.ID, a.TITLE, a.CONTENT, a.TIME, a.VIEW_COUNT, a.UPDATED_TIME, a.USERNAME, b.board_name, b.course_id, b.boardtype
		FROM ARTICLE a 
		JOIN BOARD b ON a.board_id = b.id
		JOIN MEMBER m ON a.username = m.username
		WHERE BOARD_ID=6 AND ENABLE = 1 AND m.name= #{boardSearch}
		ORDER BY a.ID DESC
		LIMIT #{pager.start}, #{pager.articlesOnPage}
	</select>
	<select id="selectQnaArticleByTag" resultType="kr.or.bit.model.Article">
		SELECT a.ID, a.TITLE, a.CONTENT, a.TIME, a.VIEW_COUNT, a.UPDATED_TIME, a.USERNAME, b.board_name, b.course_id, b.boardtype
		FROM ARTICLE a 
		JOIN BOARD b ON a.board_id = b.id
		JOIN ARTICLE_TAG at ON a.id = at.article_id
		JOIN TAG t ON t.id = at.tag_id
		WHERE BOARD_ID=6 AND ENABLE = 1 AND t.tag=#{boardSearch}
		ORDER BY a.ID DESC
		LIMIT #{pager.start}, #{pager.articlesOnPage}
	</select>
		<select id="selectAllQnaArticle" resultType="kr.or.bit.model.Article">
		SELECT id, title, content, time, updated_time, view_count, original_id,
		enable,
		level, username, board_id,
		(SELECT count(*) FROM article_vote WHERE article_id=a.id) as votenum
		FROM ARTICLE as a
		WHERE BOARD_ID=6 AND ENABLE=1
		ORDER BY id DESC
		LIMIT #{start}, #{articlesOnPage}
	</select>
</mapper>