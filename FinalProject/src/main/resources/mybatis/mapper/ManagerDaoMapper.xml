<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
/*
 * 
 * @date: 2019. 07. 11. 
 *
 * @author: 이힘찬 
 * 
 * @description: MemberDaoMapper 
 * 
 */ 
 -->
 <mapper namespace="kr.or.bit.dao.ManagerDao">
 	<select id="selectMembersByRole" resultType="kr.or.bit.model.Member">
 		SELECT m.username, m.password, m.name, m.email, m.enabled, m.profile_photo, m.course_id, a.role, c.course_name, c.end_date
		FROM member m JOIN authorities a 
		ON m.username = a.username
		JOIN course c
		ON m.course_id=c.id
		WHERE a.role = #{role}
 	</select>
 	<select id="selectMembersByRoleAndOneIntColumn" resultType="kr.or.bit.model.Member">
 		SELECT m.username, m.password, m.name, m.email, m.enabled, m.profile_photo, m.course_id, a.role, c.course_name, c.end_date
		FROM member m JOIN authorities a 
		ON m.username = a.username
		JOIN course c
		ON m.course_id=c.id
		WHERE a.role = #{role} 
		AND   m.${intColumn} = #{intValue}
 	</select>
 	<select id="selectMembersByRoleAndOneStringColumn" resultType="kr.or.bit.model.Member">
 		SELECT m.username, m.password, m.name, m.email, m.enabled, m.profile_photo, m.course_id, a.role, c.course_name, c.end_date
		FROM member m JOIN authorities a 
		ON m.username = a.username
		JOIN course c
		ON m.course_id=c.id
		WHERE a.role = #{role} 
		AND   m.${stringColumn} LIKE '%${stringValue}%'
 	</select>
 	<select id="selectMembersByRoleAndEnableAndCourseId" resultType="kr.or.bit.model.Member">
 		SELECT m.username, m.password, m.name, m.email, m.enabled, m.profile_photo, m.course_id, a.role, c.course_name, c.end_date
		FROM member m JOIN authorities a 
		ON m.username = a.username
		JOIN course c
		ON m.course_id=c.id
		WHERE a.role = #{role} 
		AND   m.enabled = #{enabled}
		AND   m.course_id = #{course_id}
 	</select>
 	<select id="selectMembersByRoleAndStringColumnAndIntColumn" resultType="kr.or.bit.model.Member">
 		SELECT m.username, m.password, m.name, m.email, m.enabled, m.profile_photo, m.course_id, a.role, c.course_name, c.end_date
		FROM member m JOIN authorities a 
		ON m.username = a.username
		JOIN course c
		ON m.course_id=c.id
		WHERE a.role = #{role} 
		AND   m.${stringColumn} LIKE '%${stringValue}%'
		AND   m.${intColumn} = #{intValue}
 	</select>
 	<select id="selectMemberByRoleAndEnableAndCourseIdAndSearch" resultType="kr.or.bit.model.Member">
 		SELECT m.username, m.password, m.name, m.email, m.enabled, m.profile_photo, m.course_id, a.role, c.course_name, c.end_date
		FROM member m JOIN authorities a 
		ON m.username = a.username
		JOIN course c
		ON m.course_id=c.id
		WHERE a.role = #{role} 
		AND   m.enabled = #{enabled}
		AND   m.course_id = #{course_id}
		AND   m.${stringColumn} LIKE '%${stringValue}%'
 	</select>
 	<select id="selectCourseList" resultType="kr.or.bit.model.Course">
 		SELECT id, course_name, start_date, end_date, subject, Classroom_id 
		FROM course
 	</select>
 	<update id="updateMemberEnabled">
 		UPDATE member
		SET enabled=#{enabled}
		WHERE username=#{username}
 	</update>
 	
 </mapper>
 