<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
/*
 * 
 * @date: 2019. 06. 24. 
 *
 * @author: 이힘찬 
 * 
 * @description: MemberDaoMapper 
 * 
 */ 
 -->
<mapper namespace="kr.or.bit.dao.MemberDao">
  <insert id="insertMember"
    parameterType="kr.or.bit.model.Member">
    INSERT INTO member(username, password, enabled, course_id)
    VALUES(#{username}, #{password}, #{enabled}, #{course_id})
  </insert>
  <insert id="insertNewCourseMembers" parameterType="map">
    { call MakeCourse(#{people}, #{teacher_id}, #{course_id},
    #{start_date}, #{password}) }
  </insert>
  <update id="updateMember"
    parameterType="kr.or.bit.model.Member">
    UPDATE member
    SET password=#{password}, name=#{name}, email=#{email},
    profile_photo=#{profile_photo}
    WHERE username=#{username}
  </update>
  <delete id="deleteMember">
    DELETE FROM member
    WHERE username=#{username}
  </delete>
  <select id="selectAllMembers"
    resultType="kr.or.bit.model.Member">
    SELECT username, password, name, email, profile_photo, course_id, group_id
    FROM MEMBER m
    LEFT JOIN GROUP_MEMBER g
    ON m.username = g.member_name
  </select>
  <select id="selectStudentsList"
    resultType="kr.or.bit.model.Member">
    SELECT m.username, m.password, m.name, m.email, m.profile_photo, course_id, group_id
    FROM member m
    LEFT JOIN authorities a
    ON m.username = a.username
    LEFT JOIN GROUP_MEMBER g
    ON m.username = g.member_name
    WHERE m.course_id = #{course_id} AND a.role = 'student'
  </select>
  <select id="selectMemberByUsername"
    resultType="kr.or.bit.model.Member">
    SELECT m.username, password, name, email, profile_photo, course_id, group_id, a.role
    FROM MEMBER m
    LEFT JOIN GROUP_MEMBER g
    ON m.username = g.member_name
    AND g.group_id = (SELECT max(group_id) from group_member where member_name = #{username})
    LEFT JOIN authorities a
    ON m.username = a.username
    WHERE m.username = #{username};
  </select>
  <select id="selectAllMembersByMycourse" resultType="kr.or.bit.model.Member">
  	SELECT m.username, name, email, profile_photo, course_id, role
	FROM member m
	LEFT JOIN authorities a ON m.username=a.username
	WHERE m.course_id=#{course_id} AND m.enabled=1 AND a.role='STUDENT';
  </select>
  <select id="selectStudent" resultType="kr.or.bit.model.Member">
  	SELECT a.USERNAME, NAME, COURSE_ID, END_DATE, role
	FROM MEMBER b JOIN COURSE c ON b.course_id = c.id JOIN AUTHORITIES a ON b.username = a.username
	WHERE ENABLED = 1 AND role = 'STUDENT';
  </select>
  <update id="updateMemberGraduate">
  	UPDATE authorities
  	SET role = "GRADUATE"
  	WHERE username=#{username} 
  </update>
</mapper>







	